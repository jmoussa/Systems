LECTURE 9 2/21/17

LAST TIME----------------------------------------------------------------------------------------------------
 
 File Descriptors- OS abstraction for I/O element
 
 takes a name and attaches it to a pointer

-----------------------------------------------------------

 Redirecting Output - > , >>
 > file - replace file
 >> file - appends to end of a file
 
 fprintf(0, ...)
 0 stdout
 1 stdin
 2 stderr

-----------------------------------------------------------

Function Pointers (best used in abstract classes)

 int stuff(char b, float other)
 int (*funcPointer)(char,float) = stuff;
 fp(2, 1.2);
 
 -Function prototype (without arg names)
 -Replace name of function with name of pointer (in parenthesis)
 -Insert "*" before pointer name 
 
-----------------------------------------------------------

 Pipe in terminal- 
 ls *afile* | grep stuff
  


FILE PERMISSIONS-----------------------------------------------------------------------------------------------

chmod - changes file permissions (on files you own)

  u  g  o
drwxrwxrwx
d-directory

---------- no permissions
-rw------- user has permission to read & write


Who
a - all 
o - other
u - users
g - user groups (group of the file owner)

perm symbols
r- read
w- write
x- exectute

chmod a+r <FileName> Add Permission
chmod a-w <FileName> Remove Permission

chown - changes file ownership (owner has to chown to you)

------------------------------------------------------------------------------------------------------------------
Controlling Code In The Terminal

ctrl+c stops code running too long (in foreground)
kill <process ID> - terminate a process
kill -9 <PID> - brute force kill

Finding process ID
ps - displays information about current process (and PID)
ps aux - displays all processes on machine
ps aux | less - concatnates code less of ps aux
top - real time processes of machines


